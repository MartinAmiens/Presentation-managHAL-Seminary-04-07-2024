---
title: "Manipulation de données bibliométriques via {managHAL}"
author: 
  - name: "Martin AMIENS"
    affiliation: "MIA - Paris-Saclay"
date: "04-07-2024"
tutors:
  - name: "Julie AUBERT"
  - name: "Pierre BARBILLON"
---

```{r, include=FALSE, echo = FALSE, warning = FALSE, message=FALSE}
library(igraph, quietly = TRUE)
library(tidyr, quietly = TRUE)
library(managHAL, quietly = TRUE)
library(dplyr, quietly = TRUE)
library(reshape2, quietly = TRUE)
library (readxl, quietly = TRUE)
library(visNetwork, quietly = TRUE)
library(sbm, quietly = TRUE)
library(tibble, quietly = TRUE)
```


## Martin AMIENS {.center}

-   Stagiaire au sein de l'unité MIA - Paris-Saclay.
-   Etudiant en première année du master Bio-Informatique et Bio-Statistiques à Paris-Saclay.
-   Tuteurs : Julie AUBERT, Pierre BARBILLON


## Plan {.center}

-   Contexte du stage
-   Objectifs du stage
-   Accessibilité et généricité de {managHAL}
-   introduction aux Réseaux
-   Ajout de fonctionnalités à {managHAL}
-   Perspectives et avenir du package

## Contexte {.center}

-   DRITT : Direction de la recherche, de l’innovation et du transfert technologique

. . .

-   Sciences Ouvertes : sont "la diffusion sans entrave des publications et des données de la recherche." (plan-national-pour-la-science-ouverte,2021)

. . .

::: columns
::: {.column width="50%"}
-   HAL : Hyper Articles en Ligne
:::

::: {.column width="50%"}
![Crédit : CCSDForge](img/HAL_logo.png)
:::
:::

. . .

-   {ManagHAL} : Package R d'extraction de données bibliométriques de HAL


## Objectifs du stage {.center}


-   Accessibilité et généricité de {managHAL}

. . .

-   Ajout de fonctionnalités à {managHAL}

## Accessibilité et généricité de {managHAL}


::: {.smaller}
**Exemple d'URL** : "https://api.archives-ouvertes.fr/search/hal/?q=structId_i:1002311&fq=publicationDate_tdate:[2022-01-01T00:00:00Z%20TO%202023-01-01T23:59:59Z]&fq=docType_s:(COMM+OR+ART ... &sort=producedDate_tdate+desc&fl=docid,halId_s,version_i,docType_s,citationFull_s ... &defType=edismax&rows=1000"
:::

<center>

<iframe src="https://api.archives-ouvertes.fr/docs/search/?schema=field-types#field-types" width="100%" height="650px">

</iframe>

</center>

## Accessibilité et généricité de {managHAL}


::: panel-tabset
#### Tab A

```{r load-team-table}

#| code-fold: true

data_RH_csv_Example <- load_team_table(filter_id = TRUE, date_cols = c(6,7), filepath_or_url = "./data/Data_RH_Example.csv")
# afin de ne garder que les lignes avec un idhal correct
data_RH_csv_Example <- data_RH_csv_Example[which(!is.na(data_RH_csv_Example$idhal)),]
data_RH_csv_Example <- as_tibble(data_RH_csv_Example)
data_RH_csv_Example
```

#### Tab B

```{r Hal-extract-csv}

#| code-fold: true

date_min = "01/01/2022"
date_max = "01/01/2023"

# Publications à partir d'un id de laboratoire.
HAL_publis_Labo <- managHAL::HAL_extract_csv(id = 1002311, date_min,date_max, type_id = "struct_id", add_output = c("structAcronym_s","structId_i", "structHasAlphaAuthIdHalPersonid_fs"))
HAL_publis_Labo <- as_tibble(HAL_publis_Labo)
HAL_publis_Labo[1,]

# Publications à partir d'ids auteurs
HAL_publis_auteurs <- managHAL::HAL_extract_csv(id = data_RH_csv_Example[,12][2,] , date_min,date_max, type_id = "person_id")
HAL_publis_auteurs <- as_tibble(HAL_publis_auteurs)
HAL_publis_auteurs
```
:::

## Introduction aux Réseaux

Un réseau est composé de :

-   noeuds (entités)

-   arêtes (interactions entre ces entités)

::: panel-tabset
#### Réseau Unipartite

```{r}
#| code-fold: true
# Création d'un réseau unipartite
set.seed(42) # Pour la reproductibilité 
unipartite <- erdos.renyi.game(10, 0.3)
unipartite_graph <- plot(unipartite, main = "Réseau Unipartite")

```

#### Réseau Bipartite

```{r}
#| code-fold: true
# Création d'un réseau bipartite Noms des nœuds
nodes_A <- c("A1", "A2", "A3")
nodes_B <- c("B1", "B2", "B3", "B4")
# Liste des arêtes
edges <- c("A1", "B1", "A1", "B2", "A2", "B1", "A2",
    "B2", "A2", "B3", "A3", "B2", "A3", "B4")
# Création du graphe
bipartite <- graph(edges, directed = FALSE)
V(bipartite)$type <- bipartite_mapping(bipartite)$type
plot(bipartite, layout = layout_as_bipartite, vertex.color = c("skyblue",
    "salmon")[V(bipartite)$type + 1], vertex.label.color = "black",
    vertex.shape = "circle", vertex.size = 30, edge.width = 2,
    main = "Réseau Bipartite")
```

#### Exemples

A : Exemple de Réseau trophique (réseau d'interactions des espèces chiliennes), Crédit : (Kéfi et al. 2016)

B : RAD51 et son réseau d'interactions de sa famille de gènes, Crédits : (Li et al., 2021)

::: r-stack
![](img/reseau_trophique.png){.fragment width="300" height="300"}

![](img/Reseau_interaction_genes.png){.fragment width="300" height="300"}
:::
:::

## Ajout de fonctionnalités à {managHAL}

### construction d'un réseau de co-auteur et SBM {auto-animate=true}

::: columns
::: {.column width="50%"}
![Réseau complet de co-auteurs de l'unité MIA - PS](img/F_réseau_exemple.png)
:::
::: {.column width="50%"}
![Réseau complet de co-auteurs de l'unité MIA - PS coloré par appartenance aux groupes](img/F_réseau_exemple_sbm.png)
:::
:::

## Ajout de fonctionnalité à {managHAL}

### Création de sous-groupe {auto-animate=true}

::: columns
::: {.column width="50%"}
![Réseau partiel de co-auteurs de l'unité MIA - PS](img/P_réseau_exemple.png)
:::
::: {.column width="50%"}
![Réseau partiel de co-auteurs de l'unité MIA - PS coloré par appartenance aux groupes](img/P_réseau_exemple_sbm.png)
:::
:::

# Cas d'usage

Voir Cas_d_usage_managHAL.R

## L'unité MIA - Paris-Saclay 1

```{r chargement de la table RH depuis un url}

#| code-fold: true
#| 

date_min = "01/01/2022"
date_max = "01/01/2023"

mia_url <- managHAL:::load_team_table(filter_id = FALSE, date_cols = c(7, 8), "https://seafile.agroparistech.fr/f/cb25bc4e071d43ffb5fb/?dl=1")

cleaned_mia <- mia_url %>% 
  dplyr::filter(!is.na(idhal) & as.numeric(idhal)==idhal) %>% # on retire les faux idHal et les NA
  # puis filtre sur les dates 
  dplyr::mutate(debut_periode = managHAL:::borne_date(debut_contrat,
                                                     date_min,"max"),
                fin_periode = managHAL:::borne_date(fin_contrat,
                                                   date_max,"min"))

```

```{r show-mia, echo=FALSE, results='asis'}
knitr::kable(head(mia_url)[,1:6])
```


```{r chargement publis a patir de table rh, eval=FALSE}
#| code-fold: true
managHAL::HAL_extract_csv()
```


```{r chargement partir de id structure, eval=FALSE}
#| code-fold: true
managHAL::HAL_extract_csv()
```


## L'unité MIA - Paris-Saclay 2


```{r creation rapport bibliographique, eval=FALSE}
#| code-fold: true
managHAL::HAL_build_report()
```

<center>

<iframe src="docs/aubert_julie_.html"> </iframe>

</center>

## L'unité MIA - Paris-Saclay 3


```{r fonction de nettoyage de donnees, eval=FALSE}
#| code-fold: true

managHAL::find_inconsistent_ids()

managHAL::find_inconsistent_names_ids()

```


## L'unité MIA - Paris-Saclay 4

Voir Partial_Network_Co-authors_ManagHAL.html



## L'unité MIA - Paris-Saclay 5

<center>

<iframe src="Partial_Network_Co-authors_ManagHAL_sbm.html" width="100%" height="650px"> </iframe>

</center>

# Questions

**Contexte :**

Dans les données récupérées, il existe pour un même nom plusieurs formes nominales (une en toute lettre, et une avec les initiales) . Toutes ces formes ne sont pas toujours associées à un identifiant. Lorsque je nettoie mes données, je souhaite donc rajouter un identifiant à une forme nominale sans identifiant s’il en existe un pour une autre forme nominale. 

**Problème :**

Il arrive qu’il existe deux identifiants pour une même forme nominale (avec les initiales).

**Exemple :**

Première forme nominale : Julie Aubert ; Deuxième forme nominale : J. Aubert

Identifiant : 15356	; Identifiant : 15356  ou  NA

Première forme nominale : Juliette Aubert	; Deuxième forme nominale : J. Aubert

Identifiant : 180399 ; Identifiant :   NA

Première forme nominale : Jule Aubert ; Deuxième forme nominale : J. Aubert

Identifiant : 20987 ; Identifiant : 20987


# Perspectives et avenir du package

- Optimisation des fonctions de préparation des données

- Création et optimisation des fonctions permettant la création d'un réseau à partir des données

- Création et optimisation des fonctions permettant la création d'un modèle à partir du réseau obtenu


# Merci de m'avoir écouté


## sources

<https://www.ouvrirlascience.fr/plan-national-pour-la-science-ouverte/>

